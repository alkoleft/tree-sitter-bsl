{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "bsl",
  "word": "identifier",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_definition"
      }
    },
    "_definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "var_definition"
        },
        {
          "type": "SYMBOL",
          "name": "_method_definition"
        },
        {
          "type": "SYMBOL",
          "name": "statement"
        }
      ]
    },
    "_method_definition": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "procedure_definition"
        },
        {
          "type": "SYMBOL",
          "name": "function_definition"
        }
      ]
    },
    "var_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_var_keyword"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": ","
                  },
                  {
                    "type": "SYMBOL",
                    "name": "identifier"
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "export_modifier"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "procedure_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_procedure_keyword"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "FIELD",
          "name": "parameters",
          "content": {
            "type": "SYMBOL",
            "name": "parameters"
          }
        },
        {
          "type": "FIELD",
          "name": "isExport",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "export_modifier"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "body"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_end_procedure_keyword"
        }
      ]
    },
    "function_definition": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_function_keyword"
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "identifier"
          }
        },
        {
          "type": "FIELD",
          "name": "parameters",
          "content": {
            "type": "SYMBOL",
            "name": "parameters"
          }
        },
        {
          "type": "FIELD",
          "name": "isExport",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "export_modifier"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "body"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_end_function_keyword"
        }
      ]
    },
    "parameters": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "parameter"
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": ","
                  },
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "SYMBOL",
                        "name": "parameter"
                      },
                      {
                        "type": "BLANK"
                      }
                    ]
                  }
                ]
              }
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "parameter": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "val",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "val_keyword"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "def_value"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "def_value": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "constValue"
        }
      ]
    },
    "constValue": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "boolean"
        },
        {
          "type": "SYMBOL",
          "name": "undefined"
        },
        {
          "type": "SYMBOL",
          "name": "null"
        }
      ]
    },
    "body": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "statement"
        }
      ]
    },
    "statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "assignment_statement"
        },
        {
          "type": "SYMBOL",
          "name": "return_statement"
        }
      ]
    },
    "return_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_LEFT",
          "value": 0,
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "RETURN_KEYWORD"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "expression"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "constValue"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "unary_expression"
        },
        {
          "type": "SYMBOL",
          "name": "binary_expression"
        },
        {
          "type": "SYMBOL",
          "name": "ternary_expression"
        }
      ]
    },
    "assignment_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "left",
          "content": {
            "type": "SYMBOL",
            "name": "leftValue"
          }
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "FIELD",
          "name": "right",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "unary_expression": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "operator",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "-"
                },
                {
                  "type": "STRING",
                  "value": "+"
                },
                {
                  "type": "STRING",
                  "value": "not"
                },
                {
                  "type": "STRING",
                  "value": "не"
                }
              ]
            }
          },
          {
            "type": "FIELD",
            "name": "argument",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          }
        ]
      }
    },
    "binary_expression": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "left",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          },
          {
            "type": "FIELD",
            "name": "operator",
            "content": {
              "type": "SYMBOL",
              "name": "operation"
            }
          },
          {
            "type": "FIELD",
            "name": "right",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          }
        ]
      }
    },
    "ternary_expression": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "?("
          },
          {
            "type": "FIELD",
            "name": "condition",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          },
          {
            "type": "STRING",
            "value": ","
          },
          {
            "type": "FIELD",
            "name": "consequence",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          },
          {
            "type": "STRING",
            "value": ","
          },
          {
            "type": "FIELD",
            "name": "alternative",
            "content": {
              "type": "SYMBOL",
              "name": "expression"
            }
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "leftValue": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "member": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "constValue"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "member_expression": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "expression"
          },
          {
            "type": "SYMBOL",
            "name": "identifier"
          }
        ]
      }
    },
    "line_comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "//"
        },
        {
          "type": "PATTERN",
          "value": ".*"
        }
      ]
    },
    "_type": {
      "type": "CHOICE",
      "members": []
    },
    "IF_KEYWORD": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Если)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(if)",
          "flags": "i"
        }
      ]
    },
    "THEN_KEYWORD": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Тогда)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(then)",
          "flags": "i"
        }
      ]
    },
    "ELSIF_KEYWORD": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(ИначеЕсли)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(elsif)",
          "flags": "i"
        }
      ]
    },
    "ELSE_KEYWORD": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Иначе)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(else)",
          "flags": "i"
        }
      ]
    },
    "ENDIF_KEYWORD": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(КонецЕсли)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(endif)",
          "flags": "i"
        }
      ]
    },
    "_for_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Для)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(for)",
          "flags": "i"
        }
      ]
    },
    "_each_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Каждого)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(each)",
          "flags": "i"
        }
      ]
    },
    "_in_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Из)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(in)",
          "flags": "i"
        }
      ]
    },
    "_to_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(По)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(to)",
          "flags": "i"
        }
      ]
    },
    "_while_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Пока)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(while)",
          "flags": "i"
        }
      ]
    },
    "_do_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Цикл)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(do)",
          "flags": "i"
        }
      ]
    },
    "_end_do_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(КонецЦикла)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(enddo)",
          "flags": "i"
        }
      ]
    },
    "_procedure_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Процедура)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(procedure)",
          "flags": "i"
        }
      ]
    },
    "_function_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Функция)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(function)",
          "flags": "i"
        }
      ]
    },
    "_end_procedure_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(КонецПроцедуры)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(endprocedure)",
          "flags": "i"
        }
      ]
    },
    "_end_function_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(КонецФункции)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(endfunction)",
          "flags": "i"
        }
      ]
    },
    "_var_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "Перем",
          "flags": "iu"
        },
        {
          "type": "PATTERN",
          "value": "var",
          "flags": "i"
        }
      ]
    },
    "_goto_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Перейти)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(goto)",
          "flags": "i"
        }
      ]
    },
    "RETURN_KEYWORD": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Возврат)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(return)",
          "flags": "i"
        }
      ]
    },
    "_continue_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Продолжить)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(continue)",
          "flags": "i"
        }
      ]
    },
    "_break_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Прервать)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(break)",
          "flags": "i"
        }
      ]
    },
    "_and_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(И)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(and)",
          "flags": "i"
        }
      ]
    },
    "_or_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Или)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(or)",
          "flags": "i"
        }
      ]
    },
    "_not_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Не)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(not)",
          "flags": "i"
        }
      ]
    },
    "_try_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Попытка)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(try)",
          "flags": "i"
        }
      ]
    },
    "_except_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Исключение)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(except)",
          "flags": "i"
        }
      ]
    },
    "_raise_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(ВызватьИсключение)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(raise)",
          "flags": "i"
        }
      ]
    },
    "_endtry_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(КонецПопытки)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(endtry)",
          "flags": "i"
        }
      ]
    },
    "_new_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Новый)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(new)",
          "flags": "i"
        }
      ]
    },
    "_execute_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Выполнить)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(execute)",
          "flags": "i"
        }
      ]
    },
    "val_keyword": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Знач)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(val)",
          "flags": "i"
        }
      ]
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Истина)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(true)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(Ложь)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(false)",
          "flags": "i"
        }
      ]
    },
    "null": {
      "type": "PATTERN",
      "value": "(null)",
      "flags": "i"
    },
    "undefined": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Неопределено)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(undefine)",
          "flags": "i"
        }
      ]
    },
    "export_modifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "(Экспорт)",
          "flags": "i"
        },
        {
          "type": "PATTERN",
          "value": "(export)",
          "flags": "i"
        }
      ]
    },
    "boolOperation": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_and_keyword"
        },
        {
          "type": "SYMBOL",
          "name": "_or_keyword"
        }
      ]
    },
    "compareOperation": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "<>"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "STRING",
          "value": ">"
        },
        {
          "type": "STRING",
          "value": "<"
        },
        {
          "type": "STRING",
          "value": ">="
        },
        {
          "type": "STRING",
          "value": "<="
        }
      ]
    },
    "operation": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "STRING",
          "value": "/"
        },
        {
          "type": "STRING",
          "value": "%"
        },
        {
          "type": "SYMBOL",
          "name": "boolOperation"
        },
        {
          "type": "SYMBOL",
          "name": "compareOperation"
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[\\wа-я_][\\wа-я_0-9]*",
      "flags": "i"
    },
    "complexIdentifier": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        }
      ]
    },
    "number": {
      "type": "PATTERN",
      "value": "\\d+|\\d*\\.\\d+([eE][\\-+]?\\d+)?"
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "STRING",
          "value": ".*"
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "_non_special_token": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PREC_RIGHT",
          "value": 0,
          "content": {
            "type": "REPEAT1",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "+"
                },
                {
                  "type": "STRING",
                  "value": "-"
                },
                {
                  "type": "STRING",
                  "value": "*"
                },
                {
                  "type": "STRING",
                  "value": "/"
                },
                {
                  "type": "STRING",
                  "value": "%"
                },
                {
                  "type": "STRING",
                  "value": "<>"
                },
                {
                  "type": "STRING",
                  "value": "="
                },
                {
                  "type": "STRING",
                  "value": ">"
                },
                {
                  "type": "STRING",
                  "value": "<"
                },
                {
                  "type": "STRING",
                  "value": ">="
                },
                {
                  "type": "STRING",
                  "value": "<="
                },
                {
                  "type": "STRING",
                  "value": "."
                },
                {
                  "type": "STRING",
                  "value": ","
                },
                {
                  "type": "STRING",
                  "value": ";"
                },
                {
                  "type": "STRING",
                  "value": ":"
                },
                {
                  "type": "STRING",
                  "value": "?"
                },
                {
                  "type": "STRING",
                  "value": "~"
                },
                {
                  "type": "STRING",
                  "value": "|"
                },
                {
                  "type": "STRING",
                  "value": "&"
                },
                {
                  "type": "STRING",
                  "value": "#"
                }
              ]
            }
          }
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "line_comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [
    "_non_special_token"
  ],
  "supertypes": [],
  "reserved": {}
}